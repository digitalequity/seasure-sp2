// firebase/firestore.rules

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Service providers can only access their own data
    match /serviceProviders/{providerId} {
      allow read, write: if request.auth != null && request.auth.uid == providerId;
    }
    
    // Boats - providers can only access boats they manage
    match /boats/{boatId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.serviceProviderId;
      allow create: if request.auth != null;
    }
    
    // Service requests - providers can only access their requests
    match /requests/{requestId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.serviceProviderId;
      allow create: if request.auth != null;
    }
    
    // Chat rooms - access if user is a participant
    match /chatRooms/{roomId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      allow create: if request.auth != null;
    }
    
    // Messages - access if user has access to the chat room
    match /messages/{messageId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/chatRooms/$(resource.data.chatRoomId)) &&
        request.auth.uid in get(/databases/$(database)/documents/chatRooms/$(resource.data.chatRoomId)).data.participants;
      allow create: if request.auth != null;
    }
    
    // Knowledge base - providers can manage their own documents
    match /knowledge/{documentId} {
      allow read: if request.auth != null && 
        (resource.data.isPublic == true || 
         request.auth.uid == resource.data.createdBy);
      allow write: if request.auth != null && 
        request.auth.uid == resource.data.createdBy;
      allow create: if request.auth != null;
    }
    
    // Invoices - providers can manage their own invoices
    match /invoices/{invoiceId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.serviceProviderId;
      allow create: if request.auth != null;
    }
    
    // Time entries - providers can manage their own time entries
    match /timeEntries/{entryId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/serviceProviders/$(request.auth.uid));
      allow create: if request.auth != null;
    }
    
    // Parts inventory - providers can manage their own inventory
    match /parts/{partId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/serviceProviders/$(request.auth.uid));
      allow create: if request.auth != null;
    }
    
    // Customer relations - providers can manage their own customers
    match /customers/{customerId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/serviceProviders/$(request.auth.uid));
      allow create: if request.auth != null;
    }
  }
}